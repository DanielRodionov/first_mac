Git шпора э
Система контроля версий, или VCS (SCM), — программа, позволяющая контролировать изменения в проекте.
Git — один из примеров системы контроля версий: он позволяет хранить, изменять и анализировать историю проекта.
Git — незаменимый в команде инструмент, ведь он помогает объединять результаты работы нескольких человек.

Узнать, где вы сейчас, поможет команда pwd.

Перейти к домашней директории - нужно ввести команду cd и символ ~ — обозначение домашней директории

Вывести содержимое директории — ls

Просматривать содержимое вместе со скрытыми файлами и папками через ls -a.

Если в названии папки есть пробелы, при вводе нужно использовать кавычки.

Чтобы вернуться в родительскую директорию — то есть на уровень выше, — вместо названия папки нужно написать две точки: ..

Есть ещё одна команда с точкой. Чтобы обратиться к текущей директории, можно использовать . Но это нужно довольно редко — например, для запуска скриптов и программ, которые принимают папку в качестве параметра.

Также cd позволяет перемещаться сразу через несколько директорий. Для этого нужно разделить их названия знаком /.

Создать файл, нужно ввести в консоль команду touch с именем файла в качестве параметра и расширением.

Для создания директорий через терминал используют другую команду — mkdir
Можно создать целую структуру директорий одной командой с помощью флага -p. (В папке папка и т.д., прописывается через /)

Также можно использовать обе команды вместе с символом домашней директории (~ - тильда) или родительской директории (..). Например, команда mkdir ~/my-git-projects создаст папку my-git-projects внутри домашней директории.

Для копирования файлов через терминал существует команда cp (что копируем куда копируем при этом что копируем может быть несколько)


Для перемещения файла из одной директории в другую используется команда mv, при этом синтаксис аналогичен синтаксису cp.

Чтобы прочитать файл, в консоль нужно ввести cat

Чтобы удалить файл, нужно напечатать команду rm

Удалить папку можно командой rmdir

Удалить вместе со всем её содержимым, можно использовать команду rm -r

Выполнение сразу нескольких команд можно осуществлять через указание амперсандов (&&)

Ещё один способ использовать Tab при навигации в другую директорию. Если ввести cd с названием папки, а затем нажать Tab, в консоль в качестве подсказки выведутся все возможные пути.

Git config user.name "Daniil Rodionov" - указать в конфигурациях имя пользователя
Git config --global user.name "Daniil Rodionov" - указать в конфигурациях Везде имя пользователя
Git config user.email "Daniel-rus@mail.ru" - указать в конфигурациях почту пользователя
Git config --global user.email "Daniel-rus@mail.ru" - указать в конфигурациях Везде почту пользователя

Настройки Git хранит в файл .gitconfig в домашней директорки (~/.gitconfig) / либо вывести содержимое файлаgit config --list



Репозитории основы работы с гитхаб

Чтобы Git начал отслеживать изменения в проекте, папку с файлами этого проекта нужно сделать Git-репозиторием (от англ. repository — «хранилище»). Для этого следует переместиться в неё и ввести команду git init (от англ. initialize — «инициализировать»).

«Разгитить» папку, если что-то пошло не так, — rm -rf .git
ключ -r (от англ. recursive — «рекурсивно») позволяет удалять папки вместе с их содержимым
ключ -f (от англ. force — «заставить») избавит вас от вопросов вроде «Вы точно хотите удалить этот файл? А этот? И этот тоже?».
Если удалить .git, то вся история проекта будет стёрта без возможности восстановления

Проверить состояние репозитория — git status

Подготовить файлы к сохранению — git add / либо git add --all ( флаг --all  позволяет подготовить все файлы в репозитории) / Также можно добавить текущую папку целиком — в этом случае все файлы в ней тоже будут добавлены - git add .

Выполнить коммит — git commit с флагом -m , т.е.  git commit -m "first commit"  - присвоить комментарий к файлам из git add
У первого комета будет выведена информация root-commit - это самый первый кормит в ветке

Сначала команда git add сообщает Git, какие именно файлы нужно сохранить и какую их версию. Затем с помощью команды git commit происходит само сохранение. 

Просмотреть историю коммитов — git log




Ssh ключ


SSH — протокол, который обеспечивает безопасный обмен данными в сети и использует для этого ключи.
SSH-ключ — ваш виртуальный идентификатор в GitHub. Как ключ от квартиры, он позволяет получить доступ к GitHub-репозиторию. Также SSH используется для доступа к другим удалённым серверам.
SSH-ключ состоит из двух частей — публичной и приватной. Публичный ключ зашифрует данные, а приватный — расшифрует. Приватным ключом ни в коем случае нельзя делиться, иначе любой сможет расшифровать все ваши секреты!


По умолчанию директория с SSH-ключами находится в домашней директории пользователя. Перейдите в неё. Обычно SSH-ключи находятся в директории .ssh/. Проверить наличие этой директории и файлов в ней можно с помощью следующей команды  ls -la .ssh/
Ищем файлы с похожими названиями id_rsa.pub , если есть то их все надо удалить

Чтобы взять код ключ, надо
Перейти в домашню директорию cd ~, потом в папку с ключами через cd .ssh
Далее просто, cat id_rsa.pub, это для для всех осей)), но у нас мак и поэтому: $ pbcopy < ~/.ssh/id_rsa.pub
команда pbcopy — она копирует поток данных в буфер обмена все содержимое файла

Проверить правильность ключа с помощью следующей команды 
ssh -T git@github.com




Back to repositary)

Привязать удалённый репозиторий к локальному — перейдите в каталог локального репозитория и введите команду  git remote add origin и далее url удаленного репозитория
Origin - это имя — стандартный псевдоним, с помощью которого можно обращаться к главному удалённому репозиторию

Убедиться, что репозитории связаны, — git remote -v
Флаг -v — короткая форма флага --verbose (англ. «подробный»). Он позволяет показать больше информации в выводе


















